---
# tasks file for CIS_Remediations_Win2022

# - name: Debug registry value
#   debug:
#     var: ansible_facts
- name: "Prepare to run"
  block:

  - name: Gather specific facts (hostname and others)
    ansible.builtin.setup:
        filter: 
          - ansible_hostname
          - ansible_os_name
          - ansible_windows_domain_role
      
  - name: Set start time
    set_fact:
      start_time: "{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  - name: Set log file name
    set_fact:
      log_file: "C:\\Windows\\Temp\\CIS_REMEDIATION\\cis_log_{{ start_time }}.txt"
  - name: Set report file name
    set_fact:
      report_file: "C:\\Windows\\Temp\\CIS_REMEDIATION\\cis_report_{{ start_time }}.csv"
  
  # - debug: 
  #     msg: "trigger log process"
  #   changed_when: true
  #   notify:
  #     - Write_log_file
  #     - Write_report_file

  - name: Set fact if system is standalone
    ansible.builtin.set_fact:
        win2022cis_is_standalone: true
    when:
        - ansible_windows_domain_role == 'Stand-alone server'

  - name: Set fact if domain controller role
    ansible.builtin.set_fact:
        win2022cis_is_domain_controller: true
    when:
        - ansible_windows_domain_role | regex_search('(domain controller)')

  - name: set fact if domain member server
    ansible.builtin.set_fact:
        win2022cis_is_domain_member: true
    when:
        - ansible_windows_domain_role == 'Member server'

# - debug:
#     msg: "{{ ansible_windows_domain_role }}"
  tags: 
    - always


- name: set fact if need to update GPO on domain controller for member server
  ansible.builtin.set_fact:
      fix_member_server: true
  when:
    - win2022cis_is_domain_controller
    - "'fix_member' in ansible_run_tags"
  tags: 
    - fix_member


- name: "Run the Sections"
  block:


  # - name: Execute the section 1 tasks
  #   ansible.builtin.import_tasks:
  #       file: ./section01/main.yaml
  #   when:
  #       - win22cis_section01
  #   tags:
  #       - section01

  # - name: Execute the section 1 tasks
  #   ansible.builtin.import_tasks:
  #        file: ./section01/main.yaml
  #   when:
  #        - win22cis_section01
  #   tags:
  #        - section01

  # - name: Execute the section 2 tasks
  #   ansible.builtin.import_tasks:
  #       file: ./section02/main.yaml
  #   when:
  #       - win22cis_section02
  #   tags:
  #       - section02

  # - name: Execute the section 9 tasks
  #   ansible.builtin.import_tasks:
  #       file: ./section09/main.yaml
  #   when:
  #       - win22cis_section09
  #   tags:
  #       - section09
        
  # - name: Execute the section 19 tasks
  #   ansible.builtin.import_tasks:
  #       file: ./section19/main.yaml
  #   when:
  #       - win22cis_section19
  #   tags:
  #       - section19

  - name: Execute the section 18 tasks
    ansible.builtin.import_tasks:
         file: ./section18/main.yaml
    when:
         - win22cis_section18
    tags:
         - section18

  # write the log file at the end of the job
  always:

  - name: Write log file
    template:
      src: output_log.txt.j2
      dest: "{{ log_file }}"
    vars:
      contents: "{{ log_content | default([]) }}"
    tags: 
      - always
      
  - name: Write report file
    template:
      src: output_report.csv.j2
      dest: "{{ report_file }}"
    vars:
      contents: "{{ report_content | default([]) }}"    
    tags: 
      - always
